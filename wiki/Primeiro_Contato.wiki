<g:plusone size="small"></g:plusone>
<h1>Primeiro Contato</h1>

<p>Se você já usou outro framework não terá qualquer dúvida de como fazer o NEOS funcionar.</p>
<p>Mas se esta é a sua primeira vez não fique apreensivo: será muito fácil instalar e começar a usar seu novo <strike>brinquedo</strike> framework.</p>

<h2>Download</h2>
<p>Pensando em um passo-a-passo bem completo, "pormenorizado", vamos começar fazendo o download do NEOS.</p>
<p>Você deve escolher sempre a última versão e no formato PHAR. Caso sua intenção é estudar o framework (seus scripts, sua estrutura) e posteriormente até mesmo alterá-lo, então você deve baixar a versão SourceCode, zipada</p>

<p>Veja neste <a href="http://code.google.com/p/neos-php-framework/downloads/list">link</a> as versões disponíveis e faça o download apropriado.</p>

<h2>Servidor</h2>
<p>Como pré-requisito você precisa:</p>
<ul>
<li>Servidor web Apache (de acesso público ou instalado em sua máquina de teste)</li>
<li>Módulo re-write do Apache ativado</li>
<li>O PHP na versão 5.3(+) instalado</li>
</ul>

<p>Para usar os arquivos PHAR diretamente chamados na url, você terá que incluir (se já não estiver) a seguinte linha no arquivo de configuração do Apache:</p>
<code>AddType application/x-httpd-php .phar</code>

<p>Se pretende criar arquivos PHAR em seu servidor terá que habilitar isso na configuração do PHP (php.ini), na seguinte linha:</p>
<code>phar.readonly = Off</code>

<p>Arquivos PHAR podem ser gravados com um "certificado" de segurança - um hash. Caso não precise disso, modifique (ou insira) a seguinte linha em seu php.ini:</p>
<code>phar.require_hash = Off</code>

<p>Bem, agora é só salvar o arquivo "neos.phar" no root do seu servidor e checar se tudo está funcionando, digitando o seguinte em seu navegador:</p>
<code>
    http://localhost/neos.phar 
    //considerando "localhost" como o endereço de seu servidor</code>
<p>Uma tela de "boas-vindas" deve ser mostrada em seu navegador.</p>

<h2>Criando um "Hello World"</h2>
<p>Vamos criar a estrutura básica (MVC) de uma aplicação com o NEOS.</p>
<p>Crie a seguinte estrutura de pastas e arquivos:</p>
<code>
root --- pasta raiz do servidor Apache

    
    root/neos.phar
    root/.htacess
    root/index.php //necessário somente se o servidor não reconhecer arquivos PHAR
    root/app/.htaccess
    root/app/controller/inicial.php
    root/app/view/html/home.html
    root/app/model/

você pode criar outras pastas conforme a necessidade de sua aplicação
    root/css
    root/js
    root/image
    ...etc</code>
<p>Agora vamos ver qual o conteúdo de cada arquivo listado acima:</p>

<h3>/index.php</h3>
<p><font color="#F00">Este arquivo será necessário <b>somente</b> se você não conseguir fazer o servidor reconhecer os arquivos PHAR acessando-os diretamente pela url - acesso externo.</font></p>
<b>Conteúdo:</b>
<code><?php
    include 'phar://neos.phar/main.php';
    Main::run();</code>

<h3>/.htaccess</h3>
<b>Conteúdo:</b>
<code><IfModule mod_rewrite.c>
    Options +FollowSymlinks 
    RewriteEngine On 

     RewriteRule "(^|/)\." - [F]  
    RewriteCond %{REQUEST_FILENAME} -s [OR] 
    RewriteCond %{REQUEST_FILENAME} -l [OR] 
    RewriteCond %{REQUEST_FILENAME} -d 
    RewriteRule ^.*$ - [NC,L] 

    RewriteRule ^.*$ neos.phar [NC,L] 
</IfModule></code>
<p><font color="#F00">Se não puder acessar o arquivo "neos.phar" externamente, troque a penúltima linha por:</font></p>

<code>
    RewriteRule ^.*$ index.php [NC,L]</code>

<p>Esse arquivo fará o re-direcionamento de toda a requisição feita ao servidor que não corresponder a um arquivo real (existente) para o sistema do NEOS.</p>

<h3>/app/.htaccess</h3>
<b>Conteúdo:</b>
<code>
    Deny From All</code>
<p>Esse arquivo especial do servidor Apache está indicando ao servidor que nenhum acesso externo (usuário do site) será permitido nesta pasta.</p>
<p>Isso porque esta pasta contém todos os arquivos de código (PHP) da nossa aplicação e portanto <b>não</b> deve ser "visto" por ninguém.</p>

<h3>/app/controller/inicial.php</h3>
<b>Conteúdo:</b>
<code><?php

class Controller_Inicial
    extends NEOS {
		
    function index() {
        _view::val('mensagem', 'Hello World');		
        _view::set('home');
    }
}</code>

<p>Vamos ver linha por linha o que tudo isso significa.</p>
<p>"Controller_Inicial" é o controlador default do NEOS. É representado por uma classe que "extends" o próprio framewrk - NEOS. Isso é interessante porque o controlador tem total controle sobre <b>todo</b> o funcionamento do sistema (veja [Controllers]).</p>
 
<p>A função "index" é a função default do controller e contém duas instruções bem fáceis de entender.<p>
<code>_view::val('mensagem', 'Hello World');</code>
<p>Isto grava "Hello World" na variável de nome "mensagem", disponível somente para as views.</p>

<code>_view::set('home');</code>
<p>A instrução acima chama uma view de nome "home" (/app/view/html/home.html).</p>

<h3>/app/view/html/home.html</h3>
<b>Conteúdo:</b>
<code><!DOCTYPE HTML>
<html> 
<head> 
<meta charset="utf-8"> 
<title>Teste</title> 
</head>

 <body>

    <p><neos:mensagem /></p>

 </body> 
</html></code>

<p>Bem, esse é um arquivo html convencional (html5) exceto pela conteúdo  do parágrafo, do corpo do html:</p>

<code><p><neos:mensagem /></p></code>

<p>Aqui nós temos uma <b>neosTag</b> que mostrará o conteúdo da variável "mensagem", setada no controller.</p>

<h3>Testando!</h3>
<p>Agora, finalmente, podemos testar nossa primeira aplicação, digitando no navegar o seguinte:</p>
<code>http://localhost</code>
<p>Considerando que "localhost" seja o endereço de nosso servidor!</p>
<p>Se tudo estiver correto, a frase <b>"Hello World"</b> deve aparecer na tela do seu navegador.</p>
<g:plusone size="small"></g:plusone>